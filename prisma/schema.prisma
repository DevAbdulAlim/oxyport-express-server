// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  name               String
  email              String    @unique
  password           String
  role               String    @default("user")
  avatar             String?
  bio                String?
  address            Address[]
  phone              String?
  birthDate          DateTime?
  gender             String?
  active             Boolean   @default(false)
  products           Product[]
  carts              Cart[]
  orders             Order[]
  resetToken         String?
  resetTokenExpires  DateTime?
  verifyToken        String?
  verifyTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Address {
  id         Int      @id @default(autoincrement())
  city       String
  state      String
  postalCode String
  country    String
  userId     Int
  user       User?    @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  image       String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  discount    Float
  images      String?
  stock       Int
  reviews     Review[]
  cartItems   CartItem[]
  orderItems  OrderItem[]
  categoryId  Int
  category    Category    @relation(fields: [categoryId], references: [id])
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Review {
  id        Int      @id @default(autoincrement())
  text      String
  rating    Int
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id     Int        @id @default(autoincrement())
  userId Int
  user   User       @relation(fields: [userId], references: [id])
  items  CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id             Int         @id @default(autoincrement())
  userId         Int
  user           User        @relation(fields: [userId], references: [id])
  name           String
  address        String
  city           String
  zip            String
  email          String
  phone          String
  order_status   String
  total_amount   Float
  paid_amount    Float       @default(0)
  due_amount     Float
  payment_status String
  items          OrderItem[]
  payments       Payment[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id            String  @id @default(cuid())
  name          String
  email         String
  phone         String
  method        String
  amount        Float
  transactionId String?
  order         Order   @relation(fields: [orderId], references: [id])
  orderId       Int
}
